from pyrogram import Client, filters, enums 
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.errors import UserNotParticipant
from ..config import Config
from helpers.database import db

async def not_subscribed(c: UtubeBot, m: Message):
    await db.add_user(user.id)
    if not Config.FORCE_SUB:
        return False
    try:             
        user = await client.get_chat_member(Config.FORCE_SUB, m.from_user.id) 
        if user.status == enums.ChatMemberStatus.BANNED:
            return True 
        else:
            return False                
    except UserNotParticipant:
        pass
    return True


@UtubeBot.on_message(filters.private & filters.create(not_subscribed))
async def forces_sub(c: UtubeBot, m: Message):
    buttons = [[InlineKeyboardButton(text="üì¢ Join Update Channel üì¢", url=f"https://t.me/{Config.FORCE_SUB}") ]]
    text = "**S·¥è Ä Äy D·¥ú·¥Ö·¥á Y·¥è·¥ú' Ä·¥á N·¥è·¥õ J·¥è…™…¥·¥á·¥Ö My C ú·¥Ä…¥…¥·¥á ü üòê. S·¥è P ü·¥á·¥ÄÍú±·¥á J·¥è…™…¥ O·¥ú Ä U·¥©·¥Ö·¥Ä·¥õ·¥á C ú·¥Ä…¥…¥·¥á ü T·¥è C·¥Ñ·¥è…¥·¥õ…™…¥·¥ú·¥á**"
    try:
        user = await client.get_chat_member(Config.FORCE_SUB, m.from_user.id)    
        if user.status == enums.ChatMemberStatus.BANNED:                                   
            return await client.send_message(m.from_user.id, text="S·¥è Ä Äy Y·¥è·¥ú' Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö T·¥è UÍú±·¥á M·¥á")  
    except UserNotParticipant:                       
        return await m.reply_text(text=text, reply_markup=InlineKeyboardMarkup(buttons))
    return await m.reply_text(text=text, reply_markup=InlineKeyboardMarkup(buttons))
          
